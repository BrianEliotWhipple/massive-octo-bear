# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = '2'

require 'yaml'
vm_config = YAML.load_file('vm-config.yml')
vm_platform = vm_config['vm_platform']

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  config.vm.box = vm_config[vm_platform]['box']

  config.vm.define :deis_workstation do | deis_workstation |

    deis_workstation.vm.network 'private_network', ip: vm_config['deis_workstation']['ip_address']

    deis_workstation.vm.provider 'virtualbox' do | vb |
      vb.memory = 1024
      vb.cpus = 2
    end

    deis_workstation.vm.provision 'shell', path: 'deis/install_deis_workstation.sh'

    if vm_config['deis_workstation']['install_deis_platform']
      deis_workstation.vm.provision 'shell', path:  'deis/install_deis_platform.sh'
    end

  end

  config.vm.define :mesos do | mesos |

    mesos.vm.network 'private_network', ip: vm_config['mesos']['ip_address']
    mesos.vm.synced_folder '../services', '/services'

    mesos.vm.provider 'virtualbox' do | vb |
      vb.memory = 4096
      vb.cpus = 4
    end

    mesos.vm.provision 'shell', path: "#{vm_platform}/pre_docker_install.sh"

    mesos.vm.provision 'docker', version: vm_config['mesos']['docker_version']

    vm_config['mesos']['install_images'].each do | image |
      mesos.vm.provision 'docker', images: [ "#{image['name']}:#{image['tag']}" ]
    end

    mesos.vm.provision 'shell', path: "#{vm_platform}/post_docker_install.sh"


    vm_config['mesos']['run_images'].each do | image |
      mesos.vm.provision 'docker' do | d |
        d.run "#{image['name']}:#{image['tag']}",
          args: "#{image['args']}",
          daemonize: true
      end
    end

    if vm_config['mesos']['install_service_images']
      mesos.vm.provision 'shell', path: 'install_local_docker_images.sh'
    end

    mesos.vm.provision 'shell', path:  "#{vm_platform}/install_mesos.sh"

  end

  config.vm.define :gocd do | gocd |

    gocd.vm.network 'private_network', ip: vm_config['gocd']['ip_address']
    gocd.vm.synced_folder '../services', '/services'

    gocd.vm.provider 'virtualbox' do | vb |
      vb.memory = 4096
      vb.cpus = 4
    end


    gocd.vm.provision 'shell', path: "#{vm_platform}/pre_docker_install.sh"

    gocd.vm.provision 'docker', version: vm_config['gocd']['docker_version']

    vm_config['gocd']['install_images'].each do | image |
      gocd.vm.provision 'docker', images: [ "#{image['name']}:#{image['tag']}" ]
    end

    gocd.vm.provision 'shell', path: "#{vm_platform}/post_docker_install.sh"

    # Install GoCD before running docker images since docker will need to be restarted.
    gocd.vm.provision 'shell', path:  "#{vm_platform}/install_gocd.sh"

    vm_config['gocd']['run_images'].each do | image |
      gocd.vm.provision 'docker' do | d |
        d.run "#{image['name']}:#{image['tag']}",
              args: "#{image['args']}",
            daemonize: true
      end
    end

  end
end